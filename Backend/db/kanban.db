CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE pacientes (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha_hash TEXT NOT NULL,
    data_nascimento DATE,
    comunidade VARCHAR(100),
    criado_em TIMESTAMP DEFAULT NOW()
);

-- Profissionais (psicólogos/psiquiatras)
CREATE TABLE profissionais (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha_hash TEXT NOT NULL,
    especialidade VARCHAR(50) CHECK (especialidade IN ('psicologo', 'psiquiatra')),
    criado_em TIMESTAMP DEFAULT NOW()
);

-- Consultas
CREATE TABLE consultas (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    paciente_id UUID REFERENCES pacientes(id) ON DELETE CASCADE,
    profissional_id UUID REFERENCES profissionais(id) ON DELETE CASCADE,
    data_horario TIMESTAMP NOT NULL,
    status VARCHAR(20) DEFAULT 'agendada' CHECK (status IN ('agendada','concluida','cancelada')),
    criado_em TIMESTAMP DEFAULT NOW()
);

-- Evolução do paciente (anotações feitas pelo profissional)
CREATE TABLE evolucoes (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    paciente_id UUID REFERENCES pacientes(id) ON DELETE CASCADE,
    profissional_id UUID REFERENCES profissionais(id) ON DELETE CASCADE,
    data TIMESTAMP DEFAULT NOW(),
    observacoes TEXT,
    humor INT CHECK (humor BETWEEN 1 AND 10) -- escala de humor 1 a 10
);

-- Oficinas / Geração de renda
CREATE TABLE oficinas (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    titulo VARCHAR(100) NOT NULL,
    descricao TEXT,
    data TIMESTAMP NOT NULL,
    local VARCHAR(100) NOT NULL,
    criado_em TIMESTAMP DEFAULT NOW()
);

-- Inscrição de pacientes em oficinas
CREATE TABLE pacientes_oficinas (
    paciente_id UUID REFERENCES pacientes(id) ON DELETE CASCADE,
    oficina_id UUID REFERENCES oficinas(id) ON DELETE CASCADE,
    PRIMARY KEY (paciente_id, oficina_id)
);

-- Índices para melhorar performance em consultas
CREATE INDEX idx_consultas_paciente ON consultas(paciente_id);
CREATE INDEX idx_consultas_profissional ON consultas(profissional_id);
CREATE INDEX idx_evolucoes_paciente ON evolucoes(paciente_id);


--Passientes------------------------------------------------------------
SELECT * FROM pacientes;

INSERT INTO pacientes (id, nome, email, senha_hash)
VALUES (gen_random_uuid(), 'João da Silva', 'joao@email.com', 'hash_aqui');

UPDATE pacientes
SET data_nascimento = '2000-05-10',
	comunidade = 'Samambaia/DF'
WHERE nome = 'João da Silva';

DELETE FROM pacientes WHERE id = 'ID';


--Profissionais-----------------------------------------------------------
SELECT * FROM profissionais;

INSERT INTO profissionais(id, nome, email, senha_hash, especialidade)
VALUES (gen_random_uuid(), 'Thiago Pinto da Silva', 'thiago@gmail.com', 'hash_aqui', 'psicologo');
